{"ast":null,"code":"var _jsxFileName = \"X:\\\\Jaroslav\\\\Desktop\\\\Diplom\\\\Front\\\\shop-app\\\\src\\\\components\\\\AppRouter.js\";\nimport React from \"react\";\nimport { Switch, Route, Redirect, BrowserRouter } from \"react-router-dom\";\nimport { AuthRoutes, PublicRoutes } from \"../Routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppRouter = () => {\n  const isAuth = false;\n  return (\n    /*#__PURE__*/\n    //Список путей сайта\n    _jsxDEV(Switch, {\n      children: [isAuth == true && AuthRoutes.map(({\n        path,\n        component\n      }) => /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        component: component,\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this)), PublicRoutes.map(({\n        path,\n        component\n      }) => /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        component: component,\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this)\n  );\n};\n_c = AppRouter;\nexport default AppRouter;\nvar _c;\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"names":["React","Switch","Route","Redirect","BrowserRouter","AuthRoutes","PublicRoutes","jsxDEV","_jsxDEV","AppRouter","isAuth","children","map","path","component","exact","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["X:/Jaroslav/Desktop/Diplom/Front/shop-app/src/components/AppRouter.js"],"sourcesContent":["import React from \"react\";\r\nimport {Switch, Route, Redirect, BrowserRouter} from \"react-router-dom\"\r\nimport { AuthRoutes, PublicRoutes } from \"../Routes\";\r\n\r\nconst AppRouter = () => {\r\n  const isAuth = false\r\n  return (\r\n    //Список путей сайта\r\n    <Switch>    \r\n      {isAuth == true && AuthRoutes.map(({path, component}) =>\r\n      <Route key = {path} path = {path} component = {component} exact/>\r\n      )}\r\n      {PublicRoutes.map(({path, component}) =>\r\n      <Route key = {path} path = {path} component = {component} exact/>\r\n      )}\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default AppRouter;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,QAAO,kBAAkB;AACvE,SAASC,UAAU,EAAEC,YAAY,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,MAAMC,MAAM,GAAG,KAAK;EACpB;IAAA;IACE;IACAF,OAAA,CAACP,MAAM;MAAAU,QAAA,GACJD,MAAM,IAAI,IAAI,IAAIL,UAAU,CAACO,GAAG,CAAC,CAAC;QAACC,IAAI;QAAEC;MAAS,CAAC,kBACpDN,OAAA,CAACN,KAAK;QAAcW,IAAI,EAAIA,IAAK;QAACC,SAAS,EAAIA,SAAU;QAACC,KAAK;MAAA,GAAjDF,IAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA8C,CAChE,CAAC,EACAb,YAAY,CAACM,GAAG,CAAC,CAAC;QAACC,IAAI;QAAEC;MAAS,CAAC,kBACpCN,OAAA,CAACN,KAAK;QAAcW,IAAI,EAAIA,IAAK;QAACC,SAAS,EAAIA,SAAU;QAACC,KAAK;MAAA,GAAjDF,IAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA8C,CAChE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;AAEb,CAAC;AAAAC,EAAA,GAbKX,SAAS;AAef,eAAeA,SAAS;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}